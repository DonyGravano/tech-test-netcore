@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Todo.Data
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@inject ApplicationDbContext dbContext

@{
    ViewData["Title"] = $"List: {Model.Title}"; 
    var sortOrder = Context.Request.Query["sortOrder"].ToString() ?? "importance";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">
    
    <form method="get" asp-action="Detail" asp-controller="TodoList" class="form-inline mb-3">
        <div class="form-group">
            <label for="sortOrder" class="mr-2">Sort By:</label>
            <select id="sortOrder" name="sortOrder" class="form-control" onchange="this.form.submit()">
                <!option value="importance" @(sortOrder == "importance" ? "selected" : "")>Importance</!option>
                <!option value="rank" @(sortOrder == "rank" ? "selected" : "")>Rank</!option>
            </select>
        </div>
        <input type="hidden" name="todoListId" value="@Model.TodoListId" />
    </form>

    <ul class="list-group">

        <li class="list-group-item">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addNewItemModal">
                <strong>Add New Item</strong>
            </button>
        </li>

        @foreach (var item in Model.Items
            .Where(i => !i.IsDone)
            .OrderByDescending(i => sortOrder == "rank" ? i.Rank : (int?)null)
            .ThenBy(i => sortOrder == "importance" ? i.Importance : (Importance?)null))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">
                
                <div class="row">

                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName

                            <img src="https://www.gravatar.com/avatar/@GravatarHashService.GetHash(item.ResponsibleParty.Email)?s=30"/>

                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>

<div class="modal fade" id="addNewItemModal" tabindex="-1" role="dialog" aria-labelledby="addNewItemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNewItemModalLabel">Add New Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form method="post" asp-action="Create" asp-controller="TodoItem" class="modal-body">
                @Html.AntiForgeryToken()
                @Html.Hidden("TodoListId", Model.TodoListId) 
                <div class="form-group">
                    <label for="Title">Title</label>
                    <input type="text" name="Title" class="form-control" />
                    <span validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="Importance">Importance</label>
                    <select name="Importance" class="form-control">
                        @foreach (var item in SelectListConvenience.ImportanceSelectListItems)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="ResponsiblePartyId">Responsible Party</label>
                    <select name="ResponsiblePartyId" class="form-control">
                        @foreach (var item in dbContext.UserSelectListItems())
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label for="Rank">Rank</label>
                    <input name="Rank" class="form-control" type="number" min="0" />
                    <span class="text-danger"></span>
                </div>

                <div class="form-group text-right">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>